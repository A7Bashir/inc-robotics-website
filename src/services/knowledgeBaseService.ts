// Enhanced Knowledge Base Service
// Provides better categorization, search capabilities, and dynamic content management

export interface KnowledgeItem {
  id: string;
  category: string;
  subcategory?: string;
  title: string;
  content: string;
  language: 'en' | 'ar';
  tags: string[];
  priority: number;
  lastUpdated: Date;
  relatedItems: string[];
  searchKeywords: string[];
}

export interface SearchResult {
  item: KnowledgeItem;
  relevanceScore: number;
  matchedKeywords: string[];
  snippet: string;
}

export interface CategoryInfo {
  id: string;
  name: string;
  description: string;
  icon?: string;
  subcategories: string[];
  itemCount: number;
}

class KnowledgeBaseService {
  private knowledgeItems: Map<string, KnowledgeItem> = new Map();
  private categories: Map<string, CategoryInfo> = new Map();
  private searchIndex: Map<string, string[]> = new Map(); // keyword -> itemIds

  constructor() {
    this.initializeKnowledgeBase();
    this.buildSearchIndex();
  }

  // Initialize the knowledge base with comprehensive content
  private initializeKnowledgeBase(): void {
    this.initializeCategories();
    this.initializeServiceRobots();
    this.initializeCleaningRobots();
    this.initializeLogisticsRobots();
    this.initializeCompanyInfo();
    this.initializeUseCases();
    this.initializeTechnicalSpecs();
  }

  // Initialize categories
  private initializeCategories(): void {
    const categories: CategoryInfo[] = [
      {
        id: 'service_robots',
        name: 'Service Robots',
        description: 'AI-powered service robots for hospitality, education, and customer service',
        subcategories: ['hospitality', 'education', 'reception', 'vip_services'],
        itemCount: 0,
        icon: 'ü§ñ'
      },
      {
        id: 'cleaning_robots',
        name: 'Cleaning Robots',
        description: 'Automated cleaning solutions for various environments',
        subcategories: ['corporate', 'outdoor', 'specialized', 'multi_surface'],
        itemCount: 0,
        icon: 'üßπ'
      },
      {
        id: 'logistics_robots',
        name: 'Logistics Robots',
        description: 'Material handling and logistics automation solutions',
        subcategories: ['material_handling', 'warehouse', 'manufacturing', 'heavy_duty'],
        itemCount: 0,
        icon: 'üì¶'
      },
      {
        id: 'company_info',
        name: 'Company Information',
        description: 'About INC Robotics, mission, vision, and values',
        subcategories: ['about', 'mission', 'team', 'location'],
        itemCount: 0,
        icon: 'üè¢'
      },
      {
        id: 'use_cases',
        name: 'Use Cases & Industries',
        description: 'Industry-specific applications and success stories',
        subcategories: ['healthcare', 'hospitality', 'education', 'manufacturing', 'banking'],
        itemCount: 0,
        icon: 'üè≠'
      },
      {
        id: 'technical_specs',
        name: 'Technical Specifications',
        description: 'Detailed technical information and specifications',
        subcategories: ['performance', 'compatibility', 'maintenance', 'upgrades'],
        itemCount: 0,
        icon: '‚öôÔ∏è'
      }
    ];

    categories.forEach(category => {
      this.categories.set(category.id, category);
    });
  }

  // Initialize service robots knowledge
  private initializeServiceRobots(): void {
    const serviceRobots = [
      {
        id: 'nova_robot',
        category: 'service_robots',
        subcategory: 'hospitality',
        title: 'NOVA - AI-Powered Hospitality Robot',
        titleAr: 'ŸÜŸàŸÅÿß - ÿ±Ÿàÿ®Ÿàÿ™ ÿßŸÑÿ∂ŸäÿßŸÅÿ© ÿßŸÑÿ∞ŸÉŸä',
        content: `NOVA is our flagship AI-powered hospitality robot designed for hotels, hospitals, shopping malls, and corporate offices.

Key Features:
- 36 cm HD display with ultra-high-definition resolution
- Qualcomm Snapdragon Octa-Core CPU for powerful performance
- 6-microphone array with 97%+ speech recognition accuracy
- HD wide-angle dual cameras (13MP) for clear face-to-face interaction
- AI voice capability with 5-meter effective pickup range
- LiDAR + depth camera navigation with smart-following
- 12-hour battery life with automatic self-charging (4.5 hour charge)
- 24/7 non-stop operation capability
- Supports 31+ languages with easy customization

Use Cases:
- Tour guide services
- Reception and customer service
- Intelligent Q&A
- Dynamic promotion and information display
- VIP guest assistance

Industries: Hotels, hospitals, shopping malls, airports, corporate offices`,
        contentAr: `ŸÜŸàŸÅÿß ŸáŸà ÿ±Ÿàÿ®Ÿàÿ™ ÿßŸÑÿ∂ŸäÿßŸÅÿ© ÿßŸÑÿ∞ŸÉŸä ÿßŸÑÿ±ÿ¶Ÿäÿ≥Ÿä ŸÖÿµŸÖŸÖ ŸÑŸÑŸÅŸÜÿßÿØŸÇ ŸàÿßŸÑŸÖÿ≥ÿ™ÿ¥ŸÅŸäÿßÿ™ ŸàÿßŸÑŸÖÿ±ÿßŸÉÿ≤ ÿßŸÑÿ™ÿ¨ÿßÿ±Ÿäÿ© ŸàÿßŸÑŸÖŸÉÿßÿ™ÿ®.

ÿßŸÑŸÖŸÖŸäÿ≤ÿßÿ™ ÿßŸÑÿ±ÿ¶Ÿäÿ≥Ÿäÿ©:
- ÿ¥ÿßÿ¥ÿ© ÿπÿßŸÑŸäÿ© ÿßŸÑÿØŸÇÿ© 36 ÿ≥ŸÖ ŸÖÿπ ÿØŸÇÿ© ŸÅÿßÿ¶ŸÇÿ© ÿßŸÑŸàÿ∂Ÿàÿ≠
- ŸÖÿπÿßŸÑÿ¨ ŸÉŸàÿßŸÑŸÉŸàŸÖ ÿ≥ŸÜÿßÿ® ÿØÿ±ÿßÿ∫ŸàŸÜ ÿ´ŸÖÿßŸÜŸä ÿßŸÑŸÜŸàÿßÿ© ŸÑŸÑÿ£ÿØÿßÿ° ÿßŸÑŸÇŸàŸä
- ŸÖÿ¨ŸÖŸàÿπÿ© 6 ŸÖŸäŸÉÿ±ŸàŸÅŸàŸÜÿßÿ™ ŸÖÿπ ÿØŸÇÿ© 97%+ ŸÅŸä ÿßŸÑÿ™ÿπÿ±ŸÅ ÿπŸÑŸâ ÿßŸÑŸÉŸÑÿßŸÖ
- ŸÉÿßŸÖŸäÿ±ÿßÿ™ ŸÖÿ≤ÿØŸàÿ¨ÿ© ÿπÿßŸÑŸäÿ© ÿßŸÑÿØŸÇÿ© (13 ŸÖŸäÿ¨ÿßÿ®ŸÉÿ≥ŸÑ) ŸÑŸÑÿ™ŸÅÿßÿπŸÑ ÿßŸÑŸàÿßÿ∂ÿ≠
- ŸÇÿØÿ±ÿßÿ™ ÿµŸàÿ™Ÿäÿ© ÿ∞ŸÉŸäÿ© ŸÖÿπ ŸÜÿ∑ÿßŸÇ ŸÅÿπÿßŸÑ 5 ÿ£ŸÖÿ™ÿßÿ±
- ŸÖŸÑÿßÿ≠ÿ© LiDAR + ŸÉÿßŸÖŸäÿ±ÿß ÿßŸÑÿπŸÖŸÇ ŸÖÿπ ÿßŸÑŸÖÿ™ÿßÿ®ÿπÿ© ÿßŸÑÿ∞ŸÉŸäÿ©
- ÿ®ÿ∑ÿßÿ±Ÿäÿ© 12 ÿ≥ÿßÿπÿ© ŸÖÿπ ÿ¥ÿ≠ŸÜ ÿ™ŸÑŸÇÿßÿ¶Ÿä (4.5 ÿ≥ÿßÿπÿ© ÿ¥ÿ≠ŸÜ)
- ŸÇÿØÿ±ÿ© ÿßŸÑÿ™ÿ¥ÿ∫ŸäŸÑ 24/7 ÿ®ÿØŸàŸÜ ÿ™ŸàŸÇŸÅ
- ÿØÿπŸÖ 31+ ŸÑÿ∫ÿ© ŸÖÿπ ÿ™ÿÆÿµŸäÿµ ÿ≥ŸáŸÑ

ÿ≠ÿßŸÑÿßÿ™ ÿßŸÑÿßÿ≥ÿ™ÿÆÿØÿßŸÖ:
- ÿÆÿØŸÖÿßÿ™ ÿØŸÑŸäŸÑ ÿ≥Ÿäÿßÿ≠Ÿä
- ÿßŸÑÿßÿ≥ÿ™ŸÇÿ®ÿßŸÑ ŸàÿÆÿØŸÖÿ© ÿßŸÑÿπŸÖŸÑÿßÿ°
- ÿ£ÿ≥ÿ¶ŸÑÿ© Ÿàÿ£ÿ¨Ÿàÿ®ÿ© ÿ∞ŸÉŸäÿ©
- ÿπÿ±ÿ∂ ÿ™ÿ±ŸàŸäÿ¨Ÿä ŸàŸÖÿπŸÑŸàŸÖÿßÿ™ ÿØŸäŸÜÿßŸÖŸäŸÉŸä
- ŸÖÿ≥ÿßÿπÿØÿ© ÿßŸÑÿ∂ŸäŸàŸÅ VIP

ÿßŸÑÿµŸÜÿßÿπÿßÿ™: ÿßŸÑŸÅŸÜÿßÿØŸÇÿå ÿßŸÑŸÖÿ≥ÿ™ÿ¥ŸÅŸäÿßÿ™ÿå ÿßŸÑŸÖÿ±ÿßŸÉÿ≤ ÿßŸÑÿ™ÿ¨ÿßÿ±Ÿäÿ©ÿå ÿßŸÑŸÖÿ∑ÿßÿ±ÿßÿ™ÿå ÿßŸÑŸÖŸÉÿßÿ™ÿ®`,
        tags: ['hospitality', 'ai', 'reception', 'multilingual', 'navigation'],
        priority: 10,
        searchKeywords: ['nova', 'hospitality', 'ai', 'reception', 'hotel', 'ŸÜŸàŸÅÿß', 'ÿ∂ŸäÿßŸÅÿ©', 'ÿ∞ŸÉŸä', 'ÿßÿ≥ÿ™ŸÇÿ®ÿßŸÑ', 'ŸÅŸÜÿØŸÇ']
      },
      {
        id: 'luckibot_robot',
        category: 'service_robots',
        subcategory: 'reception',
        title: 'LuckiBot - Welcoming Service Robot',
        titleAr: 'ŸÑŸàŸÉŸä ÿ®Ÿàÿ™ - ÿ±Ÿàÿ®Ÿàÿ™ ÿßŸÑÿÆÿØŸÖÿ© ÿßŸÑÿ™ÿ±ÿ≠Ÿäÿ®Ÿä',
        content: `LuckiBot is designed for welcoming and customer service applications with advanced AI and machine learning capabilities.

Key Features:
- Advanced AI and machine learning capabilities
- Human-robot interaction with natural language processing
- Adaptive behavior systems for different environments
- Multi-modal communication (voice, display, gestures)
- Easy integration with existing systems
- Customizable appearance and behavior

Use Cases:
- Reception areas and lobbies
- Customer service desks
- Information kiosks
- VIP lounges and waiting areas
- Event welcoming and guidance

Industries: Hotels, corporate offices, healthcare facilities, educational institutions`,
        contentAr: `ŸÑŸàŸÉŸä ÿ®Ÿàÿ™ ŸÖÿµŸÖŸÖ ŸÑÿ™ÿ∑ÿ®ŸäŸÇÿßÿ™ ÿßŸÑÿ™ÿ±ÿ≠Ÿäÿ® ŸàÿÆÿØŸÖÿ© ÿßŸÑÿπŸÖŸÑÿßÿ° ŸÖÿπ ŸÇÿØÿ±ÿßÿ™ ÿ∞ŸÉÿßÿ° ÿßÿµÿ∑ŸÜÿßÿπŸä Ÿàÿ™ÿπŸÑŸÖ ÿ¢ŸÑÿ© ŸÖÿ™ŸÇÿØŸÖÿ©.

ÿßŸÑŸÖŸÖŸäÿ≤ÿßÿ™ ÿßŸÑÿ±ÿ¶Ÿäÿ≥Ÿäÿ©:
- ŸÇÿØÿ±ÿßÿ™ ÿ∞ŸÉÿßÿ° ÿßÿµÿ∑ŸÜÿßÿπŸä Ÿàÿ™ÿπŸÑŸÖ ÿ¢ŸÑÿ© ŸÖÿ™ŸÇÿØŸÖÿ©
- ÿ™ŸÅÿßÿπŸÑ ÿßŸÑÿ•ŸÜÿ≥ÿßŸÜ ŸÖÿπ ÿßŸÑÿ±Ÿàÿ®Ÿàÿ™ ŸÖÿπ ŸÖÿπÿßŸÑÿ¨ÿ© ÿßŸÑŸÑÿ∫ÿ© ÿßŸÑÿ∑ÿ®ŸäÿπŸäÿ©
- ÿ£ŸÜÿ∏ŸÖÿ© ÿ≥ŸÑŸàŸÉ ÿ™ŸÉŸäŸÅŸäÿ© ŸÑŸÑÿ®Ÿäÿ¶ÿßÿ™ ÿßŸÑŸÖÿÆÿ™ŸÑŸÅÿ©
- ÿ™ŸàÿßÿµŸÑ ŸÖÿ™ÿπÿØÿØ ÿßŸÑŸàÿ≥ÿßÿ¶ÿ∑ (ÿµŸàÿ™ÿå ÿπÿ±ÿ∂ÿå ÿ•ŸäŸÖÿßÿ°ÿßÿ™)
- ÿ™ŸÉÿßŸÖŸÑ ÿ≥ŸáŸÑ ŸÖÿπ ÿßŸÑÿ£ŸÜÿ∏ŸÖÿ© ÿßŸÑŸÖŸàÿ¨ŸàÿØÿ©
- ŸÖÿ∏Ÿáÿ± Ÿàÿ≥ŸÑŸàŸÉ ŸÇÿßÿ®ŸÑ ŸÑŸÑÿ™ÿÆÿµŸäÿµ

ÿ≠ÿßŸÑÿßÿ™ ÿßŸÑÿßÿ≥ÿ™ÿÆÿØÿßŸÖ:
- ŸÖŸÜÿßÿ∑ŸÇ ÿßŸÑÿßÿ≥ÿ™ŸÇÿ®ÿßŸÑ ŸàÿßŸÑŸÑŸàÿ®Ÿä
- ŸÖŸÉÿßÿ™ÿ® ÿÆÿØŸÖÿ© ÿßŸÑÿπŸÖŸÑÿßÿ°
- ÿ£ŸÉÿ¥ÿßŸÉ ÿßŸÑŸÖÿπŸÑŸàŸÖÿßÿ™
- ÿµÿßŸÑÿßÿ™ VIP ŸàŸÖŸÜÿßÿ∑ŸÇ ÿßŸÑÿßŸÜÿ™ÿ∏ÿßÿ±
- ÿßŸÑÿ™ÿ±ÿ≠Ÿäÿ® ÿ®ÿßŸÑŸÅÿπÿßŸÑŸäÿßÿ™ ŸàÿßŸÑÿ™Ÿàÿ¨ŸäŸá

ÿßŸÑÿµŸÜÿßÿπÿßÿ™: ÿßŸÑŸÅŸÜÿßÿØŸÇÿå ÿßŸÑŸÖŸÉÿßÿ™ÿ® ÿßŸÑÿ¥ÿ±ŸÉÿßÿ™Ÿäÿ©ÿå ÿßŸÑŸÖÿ±ÿßŸÅŸÇ ÿßŸÑÿµÿ≠Ÿäÿ©ÿå ÿßŸÑŸÖÿ§ÿ≥ÿ≥ÿßÿ™ ÿßŸÑÿ™ÿπŸÑŸäŸÖŸäÿ©`,
        tags: ['reception', 'welcoming', 'customer_service', 'ai', 'multimodal'],
        priority: 9,
        searchKeywords: ['luckibot', 'welcoming', 'reception', 'customer service', 'ŸÑŸàŸÉŸä ÿ®Ÿàÿ™', 'ÿ™ÿ±ÿ≠Ÿäÿ®', 'ÿßÿ≥ÿ™ŸÇÿ®ÿßŸÑ', 'ÿÆÿØŸÖÿ© ÿπŸÖŸÑÿßÿ°']
      }
    ];

    serviceRobots.forEach(robot => {
      const item: KnowledgeItem = {
        id: robot.id,
        category: robot.category,
        subcategory: robot.subcategory,
        title: robot.title,
        content: robot.content,
        language: 'en',
        tags: robot.tags,
        priority: robot.priority,
        lastUpdated: new Date(),
        relatedItems: [],
        searchKeywords: robot.searchKeywords
      };

      this.knowledgeItems.set(robot.id, item);

      // Add Arabic version
      const itemAr: KnowledgeItem = {
        ...item,
        id: robot.id + '_ar',
        title: robot.titleAr,
        content: robot.contentAr,
        language: 'ar'
      };

      this.knowledgeItems.set(itemAr.id, itemAr);
    });
  }

  // Initialize cleaning robots knowledge
  private initializeCleaningRobots(): void {
    const cleaningRobots = [
      {
        id: '50_pro_robot',
        category: 'cleaning_robots',
        subcategory: 'corporate',
        title: '50 Pro - Corporate Cleaning Robot',
        titleAr: '50 ÿ®ÿ±Ÿà - ÿ±Ÿàÿ®Ÿàÿ™ ÿßŸÑÿ™ŸÜÿ∏ŸäŸÅ ÿßŸÑÿ¥ÿ±ŸÉÿßÿ™Ÿä',
        content: `The 50 Pro is specifically designed for corporate and banking facilities, providing high-efficiency cleaning with precision navigation.

Key Features:
- Specialized for corporate and banking facilities
- High-efficiency cleaning with precision navigation
- Multi-surface cleaning capabilities
- Smart scheduling and autonomous operation
- Quiet operation for office environments
- Advanced obstacle detection and avoidance
- Self-charging and maintenance alerts

Use Cases:
- Office buildings and corporate headquarters
- Banking facilities and financial centers
- Professional facilities and business centers
- Conference rooms and meeting areas
- Executive offices and VIP areas

Industries: Corporate, Banking, Professional Services, Financial`,
        contentAr: `50 ÿ®ÿ±Ÿà ŸÖÿµŸÖŸÖ ÿÆÿµŸäÿµÿßŸã ŸÑŸÑŸÖÿ±ÿßŸÅŸÇ ÿßŸÑÿ¥ÿ±ŸÉÿßÿ™Ÿäÿ© ŸàÿßŸÑŸÖÿµÿ±ŸÅŸäÿ©ÿå ŸäŸàŸÅÿ± ÿ™ŸÜÿ∏ŸäŸÅ ÿπÿßŸÑŸä ÿßŸÑŸÉŸÅÿßÿ°ÿ© ŸÖÿπ ŸÖŸÑÿßÿ≠ÿ© ÿØŸÇŸäŸÇÿ©.

ÿßŸÑŸÖŸÖŸäÿ≤ÿßÿ™ ÿßŸÑÿ±ÿ¶Ÿäÿ≥Ÿäÿ©:
- ŸÖÿ™ÿÆÿµÿµ ŸÑÿ™ŸÜÿ∏ŸäŸÅ ÿßŸÑŸÖÿ±ÿßŸÅŸÇ ÿßŸÑÿ¥ÿ±ŸÉÿßÿ™Ÿäÿ© ŸàÿßŸÑŸÖÿµÿ±ŸÅŸäÿ©
- ÿ™ŸÜÿ∏ŸäŸÅ ÿπÿßŸÑŸä ÿßŸÑŸÉŸÅÿßÿ°ÿ© ŸÖÿπ ŸÖŸÑÿßÿ≠ÿ© ÿØŸÇŸäŸÇÿ©
- ŸÇÿØÿ±ÿßÿ™ ÿ™ŸÜÿ∏ŸäŸÅ ŸÖÿ™ÿπÿØÿØÿ© ÿßŸÑÿ£ÿ≥ÿ∑ÿ≠
- ÿ¨ÿØŸàŸÑÿ© ÿ∞ŸÉŸäÿ© Ÿàÿ™ÿ¥ÿ∫ŸäŸÑ ÿ∞ÿßÿ™Ÿä
- ÿ™ÿ¥ÿ∫ŸäŸÑ ŸáÿßÿØÿ¶ ŸÑÿ®Ÿäÿ¶ÿßÿ™ ÿßŸÑŸÖŸÉÿßÿ™ÿ®
- ŸÉÿ¥ŸÅ Ÿàÿ™ÿ¨ŸÜÿ® ÿßŸÑÿπŸÇÿ®ÿßÿ™ ÿßŸÑŸÖÿ™ŸÇÿØŸÖ
- ÿ¥ÿ≠ŸÜ ÿ∞ÿßÿ™Ÿä Ÿàÿ™ŸÜÿ®ŸäŸáÿßÿ™ ÿßŸÑÿµŸäÿßŸÜÿ©

ÿ≠ÿßŸÑÿßÿ™ ÿßŸÑÿßÿ≥ÿ™ÿÆÿØÿßŸÖ:
- ÿßŸÑŸÖÿ®ÿßŸÜŸä ÿßŸÑŸÖŸÉÿ™ÿ®Ÿäÿ© ŸàÿßŸÑŸÖŸÇÿ±ÿßÿ™ ÿßŸÑÿ±ÿ¶Ÿäÿ≥Ÿäÿ©
- ÿßŸÑŸÖÿ±ÿßŸÅŸÇ ÿßŸÑŸÖÿµÿ±ŸÅŸäÿ© ŸàÿßŸÑŸÖÿ±ÿßŸÉÿ≤ ÿßŸÑŸÖÿßŸÑŸäÿ©
- ÿßŸÑŸÖÿ±ÿßŸÅŸÇ ÿßŸÑŸÖŸáŸÜŸäÿ© ŸàŸÖÿ±ÿßŸÉÿ≤ ÿßŸÑÿ£ÿπŸÖÿßŸÑ
- ŸÇÿßÿπÿßÿ™ ÿßŸÑŸÖÿ§ÿ™ŸÖÿ±ÿßÿ™ ŸàŸÖŸÜÿßÿ∑ŸÇ ÿßŸÑÿßÿ¨ÿ™ŸÖÿßÿπÿßÿ™
- ÿßŸÑŸÖŸÉÿßÿ™ÿ® ÿßŸÑÿ™ŸÜŸÅŸäÿ∞Ÿäÿ© ŸàŸÖŸÜÿßÿ∑ŸÇ VIP

ÿßŸÑÿµŸÜÿßÿπÿßÿ™: ÿ¥ÿ±ŸÉÿßÿ™Ÿäÿå ŸÖÿµÿ±ŸÅŸäÿå ÿÆÿØŸÖÿßÿ™ ŸÖŸáŸÜŸäÿ©ÿå ŸÖÿßŸÑŸä`,
        tags: ['corporate', 'banking', 'office', 'cleaning', 'precision'],
        priority: 9,
        searchKeywords: ['50 pro', 'corporate', 'banking', 'office cleaning', '50 ÿ®ÿ±Ÿà', 'ÿ¥ÿ±ŸÉÿßÿ™Ÿä', 'ŸÖÿµÿ±ŸÅŸä', 'ÿ™ŸÜÿ∏ŸäŸÅ ŸÖŸÉÿßÿ™ÿ®']
      }
    ];

    cleaningRobots.forEach(robot => {
      const item: KnowledgeItem = {
        id: robot.id,
        category: robot.category,
        subcategory: robot.subcategory,
        title: robot.title,
        content: robot.content,
        language: 'en',
        tags: robot.tags,
        priority: robot.priority,
        lastUpdated: new Date(),
        relatedItems: [],
        searchKeywords: robot.searchKeywords
      };

      this.knowledgeItems.set(robot.id, item);

      // Add Arabic version
      const itemAr: KnowledgeItem = {
        ...item,
        id: robot.id + '_ar',
        title: robot.titleAr,
        content: robot.contentAr,
        language: 'ar'
      };

      this.knowledgeItems.set(itemAr.id, itemAr);
    });
  }

  // Initialize logistics robots knowledge
  private initializeLogisticsRobots(): void {
    const logisticsRobots = [
      {
        id: 'fola_series',
        category: 'logistics_robots',
        subcategory: 'material_handling',
        title: 'FOLA Series - Material Handling Robots',
        titleAr: 'ÿ≥ŸÑÿ≥ŸÑÿ© ŸÅŸàŸÑÿß - ÿ±Ÿàÿ®Ÿàÿ™ÿßÿ™ ŸÖÿπÿßŸÑÿ¨ÿ© ÿßŸÑŸÖŸàÿßÿØ',
        content: `The FOLA series provides comprehensive material handling solutions for manufacturing and warehouse operations.

Models:
- BN-2001: Light-duty material handling
- DN-1416: Medium-duty operations
- QN-1416: Quad navigation system
- PN1530: Pallet handling capabilities
- QN2030: Heavy-duty material transport

Key Features:
- Flexible payload capacities
- Advanced navigation systems
- Integration with warehouse management systems
- Real-time tracking and monitoring
- Scalable fleet management
- Safety sensors and collision avoidance

Use Cases:
- Manufacturing lines and production floors
- Warehouse operations and distribution centers
- Logistics hubs and transportation
- Material transport and handling
- Inventory management and tracking

Industries: Manufacturing, Logistics, Warehousing, Distribution`,
        contentAr: `ÿ≥ŸÑÿ≥ŸÑÿ© ŸÅŸàŸÑÿß ÿ™ŸàŸÅÿ± ÿ≠ŸÑŸàŸÑ ÿ¥ÿßŸÖŸÑÿ© ŸÑŸÖÿπÿßŸÑÿ¨ÿ© ÿßŸÑŸÖŸàÿßÿØ ŸÑŸÑÿ™ÿµŸÜŸäÿπ ŸàÿπŸÖŸÑŸäÿßÿ™ ÿßŸÑŸÖÿ≥ÿ™ŸàÿØÿπÿßÿ™.

ÿßŸÑŸÜŸÖÿßÿ∞ÿ¨:
- BN-2001: ŸÖÿπÿßŸÑÿ¨ÿ© ŸÖŸàÿßÿØ ÿÆŸÅŸäŸÅÿ©
- DN-1416: ÿπŸÖŸÑŸäÿßÿ™ ŸÖÿ™Ÿàÿ≥ÿ∑ÿ©
- QN-1416: ŸÜÿ∏ÿßŸÖ ŸÖŸÑÿßÿ≠ÿ© ÿ±ÿ®ÿßÿπŸä
- PN1530: ŸÇÿØÿ±ÿßÿ™ ŸÖÿπÿßŸÑÿ¨ÿ© ÿßŸÑÿ®ÿßŸÑÿ™ÿßÿ™
- QN2030: ŸÜŸÇŸÑ ŸÖŸàÿßÿØ ÿ´ŸÇŸäŸÑ

ÿßŸÑŸÖŸÖŸäÿ≤ÿßÿ™ ÿßŸÑÿ±ÿ¶Ÿäÿ≥Ÿäÿ©:
- ŸÇÿØÿ±ÿßÿ™ ÿ≠ŸÖŸàŸÑÿ© ŸÖÿ±ŸÜÿ©
- ÿ£ŸÜÿ∏ŸÖÿ© ŸÖŸÑÿßÿ≠ÿ© ŸÖÿ™ŸÇÿØŸÖÿ©
- ÿ™ŸÉÿßŸÖŸÑ ŸÖÿπ ÿ£ŸÜÿ∏ŸÖÿ© ÿ•ÿØÿßÿ±ÿ© ÿßŸÑŸÖÿ≥ÿ™ŸàÿØÿπÿßÿ™
- ÿ™ÿ™ÿ®ÿπ ŸàŸÖÿ±ÿßŸÇÿ®ÿ© ŸÅŸä ÿßŸÑŸàŸÇÿ™ ÿßŸÑŸÅÿπŸÑŸä
- ÿ•ÿØÿßÿ±ÿ© ÿ£ÿ≥ÿ∑ŸàŸÑ ŸÇÿßÿ®ŸÑÿ© ŸÑŸÑÿ™Ÿàÿ≥ÿπ
- ÿ£ÿ¨Ÿáÿ≤ÿ© ÿßÿ≥ÿ™ÿ¥ÿπÿßÿ± ÿßŸÑÿ£ŸÖÿßŸÜ Ÿàÿ™ÿ¨ŸÜÿ® ÿßŸÑÿ™ÿµÿßÿØŸÖ

ÿ≠ÿßŸÑÿßÿ™ ÿßŸÑÿßÿ≥ÿ™ÿÆÿØÿßŸÖ:
- ÿÆÿ∑Ÿàÿ∑ ÿßŸÑÿ™ÿµŸÜŸäÿπ Ÿàÿ£ÿ±ÿ∂Ÿäÿßÿ™ ÿßŸÑÿ•ŸÜÿ™ÿßÿ¨
- ÿπŸÖŸÑŸäÿßÿ™ ÿßŸÑŸÖÿ≥ÿ™ŸàÿØÿπÿßÿ™ ŸàŸÖÿ±ÿßŸÉÿ≤ ÿßŸÑÿ™Ÿàÿ≤Ÿäÿπ
- ŸÖÿ≠ÿßŸàÿ± ÿßŸÑŸÑŸàÿ¨ÿ≥ÿ™Ÿäÿßÿ™ ŸàÿßŸÑŸÜŸÇŸÑ
- ŸÜŸÇŸÑ ŸàŸÖÿπÿßŸÑÿ¨ÿ© ÿßŸÑŸÖŸàÿßÿØ
- ÿ•ÿØÿßÿ±ÿ© Ÿàÿ™ÿ™ÿ®ÿπ ÿßŸÑŸÖÿÆÿ≤ŸàŸÜ

ÿßŸÑÿµŸÜÿßÿπÿßÿ™: ÿßŸÑÿ™ÿµŸÜŸäÿπÿå ÿßŸÑŸÑŸàÿ¨ÿ≥ÿ™Ÿäÿßÿ™ÿå ÿßŸÑŸÖÿ≥ÿ™ŸàÿØÿπÿßÿ™ÿå ÿßŸÑÿ™Ÿàÿ≤Ÿäÿπ`,
        tags: ['material_handling', 'manufacturing', 'warehouse', 'logistics', 'fleet'],
        priority: 8,
        searchKeywords: ['fola', 'material handling', 'manufacturing', 'warehouse', 'ŸÅŸàŸÑÿß', 'ŸÖÿπÿßŸÑÿ¨ÿ© ŸÖŸàÿßÿØ', 'ÿ™ÿµŸÜŸäÿπ', 'ŸÖÿ≥ÿ™ŸàÿØÿπ']
      }
    ];

    logisticsRobots.forEach(robot => {
      const item: KnowledgeItem = {
        id: robot.id,
        category: robot.category,
        subcategory: robot.subcategory,
        title: robot.title,
        content: robot.content,
        language: 'en',
        tags: robot.tags,
        priority: robot.priority,
        lastUpdated: new Date(),
        relatedItems: [],
        searchKeywords: robot.searchKeywords
      };

      this.knowledgeItems.set(robot.id, item);

      // Add Arabic version
      const itemAr: KnowledgeItem = {
        ...item,
        id: robot.id + '_ar',
        title: robot.titleAr,
        content: robot.contentAr,
        language: 'ar'
      };

      this.knowledgeItems.set(itemAr.id, itemAr);
    });
  }

  // Initialize company information
  private initializeCompanyInfo(): void {
    const companyInfo = [
      {
        id: 'company_overview',
        category: 'company_info',
        subcategory: 'about',
        title: 'INC Robotics - Company Overview',
        titleAr: 'ÿ•ŸÜŸÉ ÿ±Ÿàÿ®Ÿàÿ™ŸÉÿ≥ - ŸÜÿ∏ÿ±ÿ© ÿπÿßŸÖÿ© ÿπŸÑŸâ ÿßŸÑÿ¥ÿ±ŸÉÿ©',
        content: `INC Robotics is a leading Saudi robotics and AI company founded in 2021.

Mission: Revolutionize industries through cutting-edge robotics and AI solutions
Vision: Global leader in intelligent automation
Values: Innovation, Excellence, Collaboration, Sustainability

Location: 2449 Said ibn Zayd Rd, Qurtubah, 6582, Riyadh 13248, Saudi Arabia
P.O. Box: 4528 Riyadh 12482-7021

Key Achievements:
- Leading robotics company in Saudi Arabia
- Serving major clients including Aramco, SAB, SEC, KSU
- Comprehensive product portfolio across service, cleaning, and logistics
- 24/7 support and maintenance services
- Multilingual support in 31+ languages

Technical Capabilities:
- AI and Machine Learning
- Multi-language Support
- Integration Capabilities
- 24/7 Operation
- Real-time Analytics
- Remote Monitoring
- Scalable Solutions`,
        contentAr: `ÿ•ŸÜŸÉ ÿ±Ÿàÿ®Ÿàÿ™ŸÉÿ≥ ŸáŸä ÿ¥ÿ±ŸÉÿ© ÿ≥ÿπŸàÿØŸäÿ© ÿ±ÿßÿ¶ÿØÿ© ŸÅŸä ŸÖÿ¨ÿßŸÑ ÿßŸÑÿ±Ÿàÿ®Ÿàÿ™ÿßÿ™ ŸàÿßŸÑÿ∞ŸÉÿßÿ° ÿßŸÑÿßÿµÿ∑ŸÜÿßÿπŸä ÿ™ÿ£ÿ≥ÿ≥ÿ™ ÿπÿßŸÖ 2021.

ÿßŸÑŸÖŸáŸÖÿ©: ÿ•ÿ≠ÿØÿßÿ´ ÿ´Ÿàÿ±ÿ© ŸÅŸä ÿßŸÑÿµŸÜÿßÿπÿßÿ™ ŸÖŸÜ ÿÆŸÑÿßŸÑ ÿ≠ŸÑŸàŸÑ ÿ±Ÿàÿ®Ÿàÿ™Ÿäÿ© Ÿàÿ∞ŸÉÿßÿ° ÿßÿµÿ∑ŸÜÿßÿπŸä ŸÖÿ™ÿ∑Ÿàÿ±ÿ©
ÿßŸÑÿ±ÿ§Ÿäÿ©: ÿ£ŸÜ ŸÜŸÉŸàŸÜ ÿßŸÑÿ±ÿßÿ¶ÿØ ÿßŸÑÿπÿßŸÑŸÖŸä ŸÅŸä ÿßŸÑÿ£ÿ™ŸÖÿ™ÿ© ÿßŸÑÿ∞ŸÉŸäÿ©
ÿßŸÑŸÇŸäŸÖ: ÿßŸÑÿßÿ®ÿ™ŸÉÿßÿ±ÿå ÿßŸÑÿ™ŸÖŸäÿ≤ÿå ÿßŸÑÿ™ÿπÿßŸàŸÜÿå ÿßŸÑÿßÿ≥ÿ™ÿØÿßŸÖÿ©

ÿßŸÑŸÖŸàŸÇÿπ: ŸÇÿ±ÿ∑ÿ®ÿ©ÿå ÿ¥ÿßÿ±ÿπ ÿ≥ÿπŸäÿØ ÿ®ŸÜ ÿ≤ŸäÿØÿå ÿßŸÑÿ±Ÿäÿßÿ∂ 13248ÿå ÿßŸÑŸÖŸÖŸÑŸÉÿ© ÿßŸÑÿπÿ±ÿ®Ÿäÿ© ÿßŸÑÿ≥ÿπŸàÿØŸäÿ©
ÿµŸÜÿØŸàŸÇ ÿßŸÑÿ®ÿ±ŸäÿØ: 4528 ÿßŸÑÿ±Ÿäÿßÿ∂ 12482-7021

ÿßŸÑÿ•ŸÜÿ¨ÿßÿ≤ÿßÿ™ ÿßŸÑÿ±ÿ¶Ÿäÿ≥Ÿäÿ©:
- ÿ¥ÿ±ŸÉÿ© ÿ±Ÿàÿ®Ÿàÿ™ÿßÿ™ ÿ±ÿßÿ¶ÿØÿ© ŸÅŸä ÿßŸÑŸÖŸÖŸÑŸÉÿ© ÿßŸÑÿπÿ±ÿ®Ÿäÿ© ÿßŸÑÿ≥ÿπŸàÿØŸäÿ©
- ÿÆÿØŸÖÿ© ÿπŸÖŸÑÿßÿ° ŸÉÿ®ÿßÿ± ÿ®ŸÖÿß ŸÅŸä ÿ∞ŸÑŸÉ ÿ£ÿ±ÿßŸÖŸÉŸàÿå ÿ≥ÿßÿ®ÿå ÿßŸÑÿ¥ÿ±ŸÉÿ© ÿßŸÑÿ≥ÿπŸàÿØŸäÿ© ŸÑŸÑŸÉŸáÿ±ÿ®ÿßÿ°ÿå ÿ¨ÿßŸÖÿπÿ© ÿßŸÑŸÖŸÑŸÉ ÿ≥ÿπŸàÿØ
- ŸÖÿ≠ŸÅÿ∏ÿ© ŸÖŸÜÿ™ÿ¨ÿßÿ™ ÿ¥ÿßŸÖŸÑÿ© ÿπÿ®ÿ± ÿßŸÑÿÆÿØŸÖÿ© ŸàÿßŸÑÿ™ŸÜÿ∏ŸäŸÅ ŸàÿßŸÑŸÑŸàÿ¨ÿ≥ÿ™Ÿäÿßÿ™
- ÿÆÿØŸÖÿßÿ™ ÿØÿπŸÖ ŸàÿµŸäÿßŸÜÿ© 24/7
- ÿØÿπŸÖ ŸÖÿ™ÿπÿØÿØ ÿßŸÑŸÑÿ∫ÿßÿ™ ŸÅŸä 31+ ŸÑÿ∫ÿ©

ÿßŸÑŸÇÿØÿ±ÿßÿ™ ÿßŸÑÿ™ŸÇŸÜŸäÿ©:
- ÿßŸÑÿ∞ŸÉÿßÿ° ÿßŸÑÿßÿµÿ∑ŸÜÿßÿπŸä Ÿàÿ™ÿπŸÑŸÖ ÿßŸÑÿ¢ŸÑÿ©
- ÿØÿπŸÖ ŸÖÿ™ÿπÿØÿØ ÿßŸÑŸÑÿ∫ÿßÿ™
- ŸÇÿØÿ±ÿßÿ™ ÿßŸÑÿ™ŸÉÿßŸÖŸÑ
- ÿßŸÑÿ™ÿ¥ÿ∫ŸäŸÑ 24/7
- ÿßŸÑÿ™ÿ≠ŸÑŸäŸÑÿßÿ™ ŸÅŸä ÿßŸÑŸàŸÇÿ™ ÿßŸÑŸÅÿπŸÑŸä
- ÿßŸÑŸÖÿ±ÿßŸÇÿ®ÿ© ÿπŸÜ ÿ®ŸèÿπÿØ
- ÿ≠ŸÑŸàŸÑ ŸÇÿßÿ®ŸÑÿ© ŸÑŸÑÿ™Ÿàÿ≥ÿπ`,
        tags: ['company', 'about', 'mission', 'vision', 'values'],
        priority: 10,
        searchKeywords: ['inc robotics', 'company', 'about', 'saudi', 'ÿ•ŸÜŸÉ ÿ±Ÿàÿ®Ÿàÿ™ŸÉÿ≥', 'ÿ¥ÿ±ŸÉÿ©', 'ÿ≠ŸàŸÑ', 'ÿ≥ÿπŸàÿØŸä']
      }
    ];

    companyInfo.forEach(info => {
      const item: KnowledgeItem = {
        id: info.id,
        category: info.category,
        subcategory: info.subcategory,
        title: info.title,
        content: info.content,
        language: 'en',
        tags: info.tags,
        priority: info.priority,
        lastUpdated: new Date(),
        relatedItems: [],
        searchKeywords: info.searchKeywords
      };

      this.knowledgeItems.set(info.id, item);

      // Add Arabic version
      const itemAr: KnowledgeItem = {
        ...item,
        id: info.id + '_ar',
        title: info.titleAr,
        content: info.contentAr,
        language: 'ar'
      };

      this.knowledgeItems.set(itemAr.id, itemAr);
    });
  }

  // Initialize use cases and industries
  private initializeUseCases(): void {
    const useCases = [
      {
        id: 'healthcare_use_cases',
        category: 'use_cases',
        subcategory: 'healthcare',
        title: 'Healthcare Industry Applications',
        titleAr: 'ÿ™ÿ∑ÿ®ŸäŸÇÿßÿ™ ÿµŸÜÿßÿπÿ© ÿßŸÑÿ±ÿπÿßŸäÿ© ÿßŸÑÿµÿ≠Ÿäÿ©',
        content: `INC Robotics provides specialized solutions for the healthcare industry.

Service Robots:
- Patient welcoming and guidance
- Information desk assistance
- VIP patient services
- Educational content delivery

Cleaning Robots:
- Hospital facility maintenance
- Sensitive area cleaning
- Infection control compliance
- 24/7 cleaning operations

Success Stories:
- Major hospitals using NOVA for patient assistance
- Medical centers implementing specialized cleaning robots
- Clinics with automated access control
- Healthcare facilities with comprehensive automation

Benefits:
- Improved patient experience
- Enhanced hygiene standards
- Reduced operational costs
- 24/7 reliable service
- Multilingual support for diverse patients`,
        contentAr: `ÿ•ŸÜŸÉ ÿ±Ÿàÿ®Ÿàÿ™ŸÉÿ≥ ÿ™ŸàŸÅÿ± ÿ≠ŸÑŸàŸÑ ŸÖÿ™ÿÆÿµÿµÿ© ŸÑÿµŸÜÿßÿπÿ© ÿßŸÑÿ±ÿπÿßŸäÿ© ÿßŸÑÿµÿ≠Ÿäÿ©.

ÿ±Ÿàÿ®Ÿàÿ™ÿßÿ™ ÿßŸÑÿÆÿØŸÖÿ©:
- ÿ™ÿ±ÿ≠Ÿäÿ® Ÿàÿ™Ÿàÿ¨ŸäŸá ÿßŸÑŸÖÿ±ÿ∂Ÿâ
- ŸÖÿ≥ÿßÿπÿØÿ© ŸÖŸÉÿßÿ™ÿ® ÿßŸÑŸÖÿπŸÑŸàŸÖÿßÿ™
- ÿÆÿØŸÖÿßÿ™ ŸÖÿ±ÿ∂Ÿâ VIP
- ÿ™ŸÇÿØŸäŸÖ ÿßŸÑŸÖÿ≠ÿ™ŸàŸâ ÿßŸÑÿ™ÿπŸÑŸäŸÖŸä

ÿ±Ÿàÿ®Ÿàÿ™ÿßÿ™ ÿßŸÑÿ™ŸÜÿ∏ŸäŸÅ:
- ÿµŸäÿßŸÜÿ© ŸÖÿ±ÿßŸÅŸÇ ÿßŸÑŸÖÿ≥ÿ™ÿ¥ŸÅŸäÿßÿ™
- ÿ™ŸÜÿ∏ŸäŸÅ ÿßŸÑŸÖŸÜÿßÿ∑ŸÇ ÿßŸÑÿ≠ÿ≥ÿßÿ≥ÿ©
- ÿßŸÑÿßŸÖÿ™ÿ´ÿßŸÑ ŸÑŸÖŸÉÿßŸÅÿ≠ÿ© ÿßŸÑÿπÿØŸàŸâ
- ÿπŸÖŸÑŸäÿßÿ™ ÿ™ŸÜÿ∏ŸäŸÅ 24/7

ŸÇÿµÿµ ÿßŸÑŸÜÿ¨ÿßÿ≠:
- ŸÖÿ≥ÿ™ÿ¥ŸÅŸäÿßÿ™ ŸÉÿ®ÿ±Ÿâ ÿ™ÿ≥ÿ™ÿÆÿØŸÖ ŸÜŸàŸÅÿß ŸÑŸÖÿ≥ÿßÿπÿØÿ© ÿßŸÑŸÖÿ±ÿ∂Ÿâ
- ŸÖÿ±ÿßŸÉÿ≤ ÿ∑ÿ®Ÿäÿ© ÿ™ÿ∑ÿ®ŸÇ ÿ±Ÿàÿ®Ÿàÿ™ÿßÿ™ ÿ™ŸÜÿ∏ŸäŸÅ ŸÖÿ™ÿÆÿµÿµÿ©
- ÿπŸäÿßÿØÿßÿ™ ŸÖÿπ ÿ™ÿ≠ŸÉŸÖ ŸàÿµŸàŸÑ ÿ¢ŸÑŸä
- ŸÖÿ±ÿßŸÅŸÇ ÿµÿ≠Ÿäÿ© ŸÖÿπ ÿ£ÿ™ŸÖÿ™ÿ© ÿ¥ÿßŸÖŸÑÿ©

ÿßŸÑŸÅŸàÿßÿ¶ÿØ:
- ÿ™ÿ≠ÿ≥ŸäŸÜ ÿ™ÿ¨ÿ±ÿ®ÿ© ÿßŸÑŸÖÿ±ÿ∂Ÿâ
- ÿ™ÿπÿ≤Ÿäÿ≤ ŸÖÿπÿßŸäŸäÿ± ÿßŸÑŸÜÿ∏ÿßŸÅÿ©
- ÿ™ŸÇŸÑŸäŸÑ ÿßŸÑÿ™ŸÉÿßŸÑŸäŸÅ ÿßŸÑÿ™ÿ¥ÿ∫ŸäŸÑŸäÿ©
- ÿÆÿØŸÖÿ© ŸÖŸàÿ´ŸàŸÇÿ© 24/7
- ÿØÿπŸÖ ŸÖÿ™ÿπÿØÿØ ÿßŸÑŸÑÿ∫ÿßÿ™ ŸÑŸÑŸÖÿ±ÿ∂Ÿâ ÿßŸÑŸÖÿ™ŸÜŸàÿπŸäŸÜ`,
        tags: ['healthcare', 'hospital', 'medical', 'patient', 'hygiene'],
        priority: 8,
        searchKeywords: ['healthcare', 'hospital', 'medical', 'patient', 'ÿ±ÿπÿßŸäÿ© ÿµÿ≠Ÿäÿ©', 'ŸÖÿ≥ÿ™ÿ¥ŸÅŸâ', 'ÿ∑ÿ®Ÿä', 'ŸÖÿ±Ÿäÿ∂']
      }
    ];

    useCases.forEach(useCase => {
      const item: KnowledgeItem = {
        id: useCase.id,
        category: useCase.category,
        subcategory: useCase.subcategory,
        title: useCase.title,
        content: useCase.content,
        language: 'en',
        tags: useCase.tags,
        priority: useCase.priority,
        lastUpdated: new Date(),
        relatedItems: [],
        searchKeywords: useCase.searchKeywords
      };

      this.knowledgeItems.set(useCase.id, item);

      // Add Arabic version
      const itemAr: KnowledgeItem = {
        ...item,
        id: useCase.id + '_ar',
        title: useCase.titleAr,
        content: useCase.contentAr,
        language: 'ar'
      };

      this.knowledgeItems.set(itemAr.id, itemAr);
    });
  }

  // Initialize technical specifications
  private initializeTechnicalSpecs(): void {
    const techSpecs = [
      {
        id: 'ai_capabilities',
        category: 'technical_specs',
        subcategory: 'performance',
        title: 'AI and Machine Learning Capabilities',
        titleAr: 'ŸÇÿØÿ±ÿßÿ™ ÿßŸÑÿ∞ŸÉÿßÿ° ÿßŸÑÿßÿµÿ∑ŸÜÿßÿπŸä Ÿàÿ™ÿπŸÑŸÖ ÿßŸÑÿ¢ŸÑÿ©',
        content: `Our robots are powered by advanced AI and machine learning technologies.

AI Features:
- Natural Language Processing (NLP)
- Computer Vision and Image Recognition
- Predictive Analytics
- Adaptive Learning
- Multi-modal Communication
- Context Awareness

Machine Learning:
- Continuous improvement through data
- Pattern recognition and prediction
- Behavioral adaptation
- Performance optimization
- User preference learning
- Anomaly detection

Technical Specifications:
- Processing Power: Qualcomm Snapdragon Octa-Core
- Memory: 8GB RAM, 128GB Storage
- Connectivity: WiFi 6, Bluetooth 5.0, 4G/5G
- Sensors: LiDAR, RGB-D cameras, microphones
- Operating System: Custom Linux-based
- Update Mechanism: OTA (Over-The-Air)

Performance Metrics:
- Response Time: < 200ms
- Accuracy: 97%+ for speech recognition
- Uptime: 99.9% availability
- Battery Life: 12+ hours continuous operation
- Language Support: 31+ languages
- Concurrent Users: Up to 50 simultaneous interactions`,
        contentAr: `ÿ±Ÿàÿ®Ÿàÿ™ÿßÿ™ŸÜÿß ŸÖÿØÿπŸàŸÖÿ© ÿ®ÿ™ŸÇŸÜŸäÿßÿ™ ÿßŸÑÿ∞ŸÉÿßÿ° ÿßŸÑÿßÿµÿ∑ŸÜÿßÿπŸä Ÿàÿ™ÿπŸÑŸÖ ÿßŸÑÿ¢ŸÑÿ© ÿßŸÑŸÖÿ™ŸÇÿØŸÖÿ©.

ŸÖŸÖŸäÿ≤ÿßÿ™ ÿßŸÑÿ∞ŸÉÿßÿ° ÿßŸÑÿßÿµÿ∑ŸÜÿßÿπŸä:
- ŸÖÿπÿßŸÑÿ¨ÿ© ÿßŸÑŸÑÿ∫ÿ© ÿßŸÑÿ∑ÿ®ŸäÿπŸäÿ© (NLP)
- ÿßŸÑÿ±ÿ§Ÿäÿ© ÿßŸÑÿ≠ÿßÿ≥Ÿàÿ®Ÿäÿ© ŸàÿßŸÑÿ™ÿπÿ±ŸÅ ÿπŸÑŸâ ÿßŸÑÿµŸàÿ±
- ÿßŸÑÿ™ÿ≠ŸÑŸäŸÑÿßÿ™ ÿßŸÑÿ™ŸÜÿ®ÿ§Ÿäÿ©
- ÿßŸÑÿ™ÿπŸÑŸÖ ÿßŸÑÿ™ŸÉŸäŸÅŸä
- ÿßŸÑÿ™ŸàÿßÿµŸÑ ŸÖÿ™ÿπÿØÿØ ÿßŸÑŸàÿ≥ÿßÿ¶ÿ∑
- ÿßŸÑŸàÿπŸä ÿßŸÑÿ≥ŸäÿßŸÇŸä

ÿ™ÿπŸÑŸÖ ÿßŸÑÿ¢ŸÑÿ©:
- ÿßŸÑÿ™ÿ≠ÿ≥ŸäŸÜ ÿßŸÑŸÖÿ≥ÿ™ŸÖÿ± ŸÖŸÜ ÿÆŸÑÿßŸÑ ÿßŸÑÿ®ŸäÿßŸÜÿßÿ™
- ÿßŸÑÿ™ÿπÿ±ŸÅ ÿπŸÑŸâ ÿßŸÑÿ£ŸÜŸÖÿßÿ∑ ŸàÿßŸÑÿ™ŸÜÿ®ÿ§
- ÿßŸÑÿ™ŸÉŸäŸÅ ÿßŸÑÿ≥ŸÑŸàŸÉŸä
- ÿ™ÿ≠ÿ≥ŸäŸÜ ÿßŸÑÿ£ÿØÿßÿ°
- ÿ™ÿπŸÑŸÖ ÿ™ŸÅÿ∂ŸäŸÑÿßÿ™ ÿßŸÑŸÖÿ≥ÿ™ÿÆÿØŸÖ
- ŸÉÿ¥ŸÅ ÿßŸÑÿ¥ÿ∞Ÿàÿ∞

ÿßŸÑŸÖŸàÿßÿµŸÅÿßÿ™ ÿßŸÑÿ™ŸÇŸÜŸäÿ©:
- ŸÇŸàÿ© ÿßŸÑŸÖÿπÿßŸÑÿ¨ÿ©: ŸÉŸàÿßŸÑŸÉŸàŸÖ ÿ≥ŸÜÿßÿ® ÿØÿ±ÿßÿ∫ŸàŸÜ ÿ´ŸÖÿßŸÜŸä ÿßŸÑŸÜŸàÿßÿ©
- ÿßŸÑÿ∞ÿßŸÉÿ±ÿ©: 8 ÿ¨Ÿäÿ¨ÿßÿ®ÿßŸäÿ™ ÿ±ÿßŸÖÿå 128 ÿ¨Ÿäÿ¨ÿßÿ®ÿßŸäÿ™ ÿ™ÿÆÿ≤ŸäŸÜ
- ÿßŸÑÿßÿ™ÿµÿßŸÑ: WiFi 6ÿå ÿ®ŸÑŸàÿ™Ÿàÿ´ 5.0ÿå 4G/5G
- ÿ£ÿ¨Ÿáÿ≤ÿ© ÿßŸÑÿßÿ≥ÿ™ÿ¥ÿπÿßÿ±: LiDARÿå ŸÉÿßŸÖŸäÿ±ÿßÿ™ RGB-Dÿå ŸÖŸäŸÉÿ±ŸàŸÅŸàŸÜÿßÿ™
- ŸÜÿ∏ÿßŸÖ ÿßŸÑÿ™ÿ¥ÿ∫ŸäŸÑ: ŸÑŸäŸÜŸÉÿ≥ ŸÖÿÆÿµÿµ
- ÿ¢ŸÑŸäÿ© ÿßŸÑÿ™ÿ≠ÿØŸäÿ´: OTA (ÿπÿ®ÿ± ÿßŸÑŸáŸàÿßÿ°)

ŸÖŸÇÿßŸäŸäÿ≥ ÿßŸÑÿ£ÿØÿßÿ°:
- ŸàŸÇÿ™ ÿßŸÑÿßÿ≥ÿ™ÿ¨ÿßÿ®ÿ©: < 200 ŸÖŸÑŸÑŸä ÿ´ÿßŸÜŸäÿ©
- ÿßŸÑÿØŸÇÿ©: 97%+ ŸÑŸÑÿ™ÿπÿ±ŸÅ ÿπŸÑŸâ ÿßŸÑŸÉŸÑÿßŸÖ
- ŸàŸÇÿ™ ÿßŸÑÿ™ÿ¥ÿ∫ŸäŸÑ: 99.9% ÿ™ŸàŸÅÿ±
- ÿπŸÖÿ± ÿßŸÑÿ®ÿ∑ÿßÿ±Ÿäÿ©: 12+ ÿ≥ÿßÿπÿ© ÿ™ÿ¥ÿ∫ŸäŸÑ ŸÖÿ≥ÿ™ŸÖÿ±
- ÿØÿπŸÖ ÿßŸÑŸÑÿ∫ÿßÿ™: 31+ ŸÑÿ∫ÿ©
- ÿßŸÑŸÖÿ≥ÿ™ÿÆÿØŸÖŸàŸÜ ÿßŸÑŸÖÿ™ÿ≤ÿßŸÖŸÜŸàŸÜ: ÿ≠ÿ™Ÿâ 50 ÿ™ŸÅÿßÿπŸÑ ŸÖÿ™ÿ≤ÿßŸÖŸÜ`,
        tags: ['ai', 'machine_learning', 'performance', 'technical', 'specifications'],
        priority: 9,
        searchKeywords: ['ai', 'machine learning', 'performance', 'technical', 'ÿ∞ŸÉÿßÿ° ÿßÿµÿ∑ŸÜÿßÿπŸä', 'ÿ™ÿπŸÑŸÖ ÿ¢ŸÑÿ©', 'ÿ£ÿØÿßÿ°', 'ÿ™ŸÇŸÜŸä']
      }
    ];

    techSpecs.forEach(spec => {
      const item: KnowledgeItem = {
        id: spec.id,
        category: spec.category,
        subcategory: spec.subcategory,
        title: spec.title,
        content: spec.content,
        language: 'en',
        tags: spec.tags,
        priority: spec.priority,
        lastUpdated: new Date(),
        relatedItems: [],
        searchKeywords: spec.searchKeywords
      };

      this.knowledgeItems.set(spec.id, item);

      // Add Arabic version
      const itemAr: KnowledgeItem = {
        ...item,
        id: spec.id + '_ar',
        title: spec.titleAr,
        content: spec.contentAr,
        language: 'ar'
      };

      this.knowledgeItems.set(itemAr.id, itemAr);
    });
  }

  // Build search index for fast keyword searching
  private buildSearchIndex(): void {
    this.searchIndex.clear();
    
    this.knowledgeItems.forEach((item, itemId) => {
      // Index search keywords
      item.searchKeywords.forEach(keyword => {
        const normalizedKeyword = keyword.toLowerCase();
        if (!this.searchIndex.has(normalizedKeyword)) {
          this.searchIndex.set(normalizedKeyword, []);
        }
        this.searchIndex.get(normalizedKeyword)!.push(itemId);
      });

      // Index tags
      item.tags.forEach(tag => {
        const normalizedTag = tag.toLowerCase();
        if (!this.searchIndex.has(normalizedTag)) {
          this.searchIndex.set(normalizedTag, []);
        }
        this.searchIndex.get(normalizedTag)!.push(itemId);
      });
    });

    // Update category item counts
    this.categories.forEach(category => {
      const itemCount = Array.from(this.knowledgeItems.values())
        .filter(item => item.category === category.id)
        .length;
      category.itemCount = itemCount;
    });
  }

  // Search knowledge base
  search(query: string, language: 'en' | 'ar' = 'en', category?: string): SearchResult[] {
    const normalizedQuery = query.toLowerCase().trim();
    const queryWords = normalizedQuery.split(/\s+/);
    const results: Map<string, SearchResult> = new Map();

    // Search through indexed keywords
    queryWords.forEach(word => {
      if (this.searchIndex.has(word)) {
        this.searchIndex.get(word)!.forEach(itemId => {
          const item = this.knowledgeItems.get(itemId);
          if (item && item.language === language && (!category || item.category === category)) {
            if (!results.has(itemId)) {
              results.set(itemId, {
                item,
                relevanceScore: 0,
                matchedKeywords: [],
                snippet: this.generateSnippet(item.content, queryWords)
              });
            }
            
            const result = results.get(itemId)!;
            result.relevanceScore += 1;
            result.matchedKeywords.push(word);
          }
        });
      }
    });

    // Sort by relevance score and priority
    return Array.from(results.values())
      .sort((a, b) => {
        const scoreA = a.relevanceScore + (a.item.priority * 0.1);
        const scoreB = b.relevanceScore + (b.item.priority * 0.1);
        return scoreB - scoreA;
      });
  }

  // Generate snippet from content
  private generateSnippet(content: string, queryWords: string[]): string {
    const sentences = content.split(/[.!?]+/);
    let bestSentence = '';
    let maxMatches = 0;

    sentences.forEach(sentence => {
      const lowerSentence = sentence.toLowerCase();
      const matches = queryWords.filter(word => lowerSentence.includes(word)).length;
      if (matches > maxMatches) {
        maxMatches = matches;
        bestSentence = sentence.trim();
      }
    });

    return bestSentence || content.substring(0, 150) + '...';
  }

  // Get knowledge item by ID
  getItem(itemId: string): KnowledgeItem | undefined {
    return this.knowledgeItems.get(itemId);
  }

  // Get items by category
  getItemsByCategory(category: string, language: 'en' | 'ar' = 'en'): KnowledgeItem[] {
    return Array.from(this.knowledgeItems.values())
      .filter(item => item.category === category && item.language === language)
      .sort((a, b) => b.priority - a.priority);
  }

  // Get all categories
  getCategories(): CategoryInfo[] {
    return Array.from(this.categories.values());
  }

  // Get category by ID
  getCategory(categoryId: string): CategoryInfo | undefined {
    return this.categories.get(categoryId);
  }

  // Add new knowledge item
  addItem(item: Omit<KnowledgeItem, 'id' | 'lastUpdated'>): string {
    const itemId = `${item.category}_${Date.now()}_${Math.random().toString(36).substr(2, 9)}`;
    const newItem: KnowledgeItem = {
      ...item,
      id: itemId,
      lastUpdated: new Date()
    };

    this.knowledgeItems.set(itemId, newItem);
    this.buildSearchIndex();
    return itemId;
  }

  // Update knowledge item
  updateItem(itemId: string, updates: Partial<KnowledgeItem>): boolean {
    const item = this.knowledgeItems.get(itemId);
    if (!item) return false;

    const updatedItem: KnowledgeItem = {
      ...item,
      ...updates,
      lastUpdated: new Date()
    };

    this.knowledgeItems.set(itemId, updatedItem);
    this.buildSearchIndex();
    return true;
  }

  // Delete knowledge item
  deleteItem(itemId: string): boolean {
    const deleted = this.knowledgeItems.delete(itemId);
    if (deleted) {
      this.buildSearchIndex();
    }
    return deleted;
  }

  // Get analytics
  getAnalytics(): {
    totalItems: number;
    itemsByCategory: Record<string, number>;
    itemsByLanguage: Record<string, number>;
    topTags: Array<{ tag: string; count: number }>;
  } {
    const items = Array.from(this.knowledgeItems.values());
    
    const analytics = {
      totalItems: items.length,
      itemsByCategory: {} as Record<string, number>,
      itemsByLanguage: {} as Record<string, number>,
      topTags: [] as Array<{ tag: string; count: number }>
    };

    // Count by category
    items.forEach(item => {
      analytics.itemsByCategory[item.category] = (analytics.itemsByCategory[item.category] || 0) + 1;
      analytics.itemsByLanguage[item.language] = (analytics.itemsByLanguage[item.language] || 0) + 1;
    });

    // Count tags
    const tagCounts: Record<string, number> = {};
    items.forEach(item => {
      item.tags.forEach(tag => {
        tagCounts[tag] = (tagCounts[tag] || 0) + 1;
      });
    });

    analytics.topTags = Object.entries(tagCounts)
      .map(([tag, count]) => ({ tag, count }))
      .sort((a, b) => b.count - a.count)
      .slice(0, 10);

    return analytics;
  }
}

// Export singleton instance
export const knowledgeBaseService = new KnowledgeBaseService();
export default knowledgeBaseService;
